"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/jsonfile";
exports.ids = ["vendor-chunks/jsonfile"];
exports.modules = {

/***/ "(rsc)/./node_modules/jsonfile/index.js":
/*!****************************************!*\
  !*** ./node_modules/jsonfile/index.js ***!
  \****************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\nlet _fs;\ntry {\n    _fs = __webpack_require__(/*! graceful-fs */ \"(rsc)/./node_modules/graceful-fs/graceful-fs.js\");\n} catch (_) {\n    _fs = __webpack_require__(/*! fs */ \"fs\");\n}\nconst universalify = __webpack_require__(/*! universalify */ \"(rsc)/./node_modules/universalify/index.js\");\nconst { stringify, stripBom } = __webpack_require__(/*! ./utils */ \"(rsc)/./node_modules/jsonfile/utils.js\");\nasync function _readFile(file, options = {}) {\n    if (typeof options === \"string\") {\n        options = {\n            encoding: options\n        };\n    }\n    const fs = options.fs || _fs;\n    const shouldThrow = \"throws\" in options ? options.throws : true;\n    let data = await universalify.fromCallback(fs.readFile)(file, options);\n    data = stripBom(data);\n    let obj;\n    try {\n        obj = JSON.parse(data, options ? options.reviver : null);\n    } catch (err) {\n        if (shouldThrow) {\n            err.message = `${file}: ${err.message}`;\n            throw err;\n        } else {\n            return null;\n        }\n    }\n    return obj;\n}\nconst readFile = universalify.fromPromise(_readFile);\nfunction readFileSync(file, options = {}) {\n    if (typeof options === \"string\") {\n        options = {\n            encoding: options\n        };\n    }\n    const fs = options.fs || _fs;\n    const shouldThrow = \"throws\" in options ? options.throws : true;\n    try {\n        let content = fs.readFileSync(file, options);\n        content = stripBom(content);\n        return JSON.parse(content, options.reviver);\n    } catch (err) {\n        if (shouldThrow) {\n            err.message = `${file}: ${err.message}`;\n            throw err;\n        } else {\n            return null;\n        }\n    }\n}\nasync function _writeFile(file, obj, options = {}) {\n    const fs = options.fs || _fs;\n    const str = stringify(obj, options);\n    await universalify.fromCallback(fs.writeFile)(file, str, options);\n}\nconst writeFile = universalify.fromPromise(_writeFile);\nfunction writeFileSync(file, obj, options = {}) {\n    const fs = options.fs || _fs;\n    const str = stringify(obj, options);\n    // not sure if fs.writeFileSync returns anything, but just in case\n    return fs.writeFileSync(file, str, options);\n}\nconst jsonfile = {\n    readFile,\n    readFileSync,\n    writeFile,\n    writeFileSync\n};\nmodule.exports = jsonfile;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,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ZS9pbmRleC5qcz9jYzg1Il0sInNvdXJjZXNDb250ZW50IjpbImxldCBfZnNcbnRyeSB7XG4gIF9mcyA9IHJlcXVpcmUoJ2dyYWNlZnVsLWZzJylcbn0gY2F0Y2ggKF8pIHtcbiAgX2ZzID0gcmVxdWlyZSgnZnMnKVxufVxuY29uc3QgdW5pdmVyc2FsaWZ5ID0gcmVxdWlyZSgndW5pdmVyc2FsaWZ5JylcbmNvbnN0IHsgc3RyaW5naWZ5LCBzdHJpcEJvbSB9ID0gcmVxdWlyZSgnLi91dGlscycpXG5cbmFzeW5jIGZ1bmN0aW9uIF9yZWFkRmlsZSAoZmlsZSwgb3B0aW9ucyA9IHt9KSB7XG4gIGlmICh0eXBlb2Ygb3B0aW9ucyA9PT0gJ3N0cmluZycpIHtcbiAgICBvcHRpb25zID0geyBlbmNvZGluZzogb3B0aW9ucyB9XG4gIH1cblxuICBjb25zdCBmcyA9IG9wdGlvbnMuZnMgfHwgX2ZzXG5cbiAgY29uc3Qgc2hvdWxkVGhyb3cgPSAndGhyb3dzJyBpbiBvcHRpb25zID8gb3B0aW9ucy50aHJvd3MgOiB0cnVlXG5cbiAgbGV0IGRhdGEgPSBhd2FpdCB1bml2ZXJzYWxpZnkuZnJvbUNhbGxiYWNrKGZzLnJlYWRGaWxlKShmaWxlLCBvcHRpb25zKVxuXG4gIGRhdGEgPSBzdHJpcEJvbShkYXRhKVxuXG4gIGxldCBvYmpcbiAgdHJ5IHtcbiAgICBvYmogPSBKU09OLnBhcnNlKGRhdGEsIG9wdGlvbnMgPyBvcHRpb25zLnJldml2ZXIgOiBudWxsKVxuICB9IGNhdGNoIChlcnIpIHtcbiAgICBpZiAoc2hvdWxkVGhyb3cpIHtcbiAgICAgIGVyci5tZXNzYWdlID0gYCR7ZmlsZX06ICR7ZXJyLm1lc3NhZ2V9YFxuICAgICAgdGhyb3cgZXJyXG4gICAgfSBlbHNlIHtcbiAgICAgIHJldHVybiBudWxsXG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIG9ialxufVxuXG5jb25zdCByZWFkRmlsZSA9IHVuaXZlcnNhbGlmeS5mcm9tUHJvbWlzZShfcmVhZEZpbGUpXG5cbmZ1bmN0aW9uIHJlYWRGaWxlU3luYyAoZmlsZSwgb3B0aW9ucyA9IHt9KSB7XG4gIGlmICh0eXBlb2Ygb3B0aW9ucyA9PT0gJ3N0cmluZycpIHtcbiAgICBvcHRpb25zID0geyBlbmNvZGluZzogb3B0aW9ucyB9XG4gIH1cblxuICBjb25zdCBmcyA9IG9wdGlvbnMuZnMgfHwgX2ZzXG5cbiAgY29uc3Qgc2hvdWxkVGhyb3cgPSAndGhyb3dzJyBpbiBvcHRpb25zID8gb3B0aW9ucy50aHJvd3MgOiB0cnVlXG5cbiAgdHJ5IHtcbiAgICBsZXQgY29udGVudCA9IGZzLnJlYWRGaWxlU3luYyhmaWxlLCBvcHRpb25zKVxuICAgIGNvbnRlbnQgPSBzdHJpcEJvbShjb250ZW50KVxuICAgIHJldHVybiBKU09OLnBhcnNlKGNvbnRlbnQsIG9wdGlvbnMucmV2aXZlcilcbiAgfSBjYXRjaCAoZXJyKSB7XG4gICAgaWYgKHNob3VsZFRocm93KSB7XG4gICAgICBlcnIubWVzc2FnZSA9IGAke2ZpbGV9OiAke2Vyci5tZXNzYWdlfWBcbiAgICAgIHRocm93IGVyclxuICAgIH0gZWxzZSB7XG4gICAgICByZXR1cm4gbnVsbFxuICAgIH1cbiAgfVxufVxuXG5hc3luYyBmdW5jdGlvbiBfd3JpdGVGaWxlIChmaWxlLCBvYmosIG9wdGlvbnMgPSB7fSkge1xuICBjb25zdCBmcyA9IG9wdGlvbnMuZnMgfHwgX2ZzXG5cbiAgY29uc3Qgc3RyID0gc3RyaW5naWZ5KG9iaiwgb3B0aW9ucylcblxuICBhd2FpdCB1bml2ZXJzYWxpZnkuZnJvbUNhbGxiYWNrKGZzLndyaXRlRmlsZSkoZmlsZSwgc3RyLCBvcHRpb25zKVxufVxuXG5jb25zdCB3cml0ZUZpbGUgPSB1bml2ZXJzYWxpZnkuZnJvbVByb21pc2UoX3dyaXRlRmlsZSlcblxuZnVuY3Rpb24gd3JpdGVGaWxlU3luYyAoZmlsZSwgb2JqLCBvcHRpb25zID0ge30pIHtcbiAgY29uc3QgZnMgPSBvcHRpb25zLmZzIHx8IF9mc1xuXG4gIGNvbnN0IHN0ciA9IHN0cmluZ2lmeShvYmosIG9wdGlvbnMpXG4gIC8vIG5vdCBzdXJlIGlmIGZzLndyaXRlRmlsZVN5bmMgcmV0dXJucyBhbnl0aGluZywgYnV0IGp1c3QgaW4gY2FzZVxuICByZXR1cm4gZnMud3JpdGVGaWxlU3luYyhmaWxlLCBzdHIsIG9wdGlvbnMpXG59XG5cbmNvbnN0IGpzb25maWxlID0ge1xuICByZWFkRmlsZSxcbiAgcmVhZEZpbGVTeW5jLFxuICB3cml0ZUZpbGUsXG4gIHdyaXRlRmlsZVN5bmNcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBqc29uZmlsZVxuIl0sIm5hbWVzIjpbIl9mcyIsInJlcXVpcmUiLCJfIiwidW5pdmVyc2FsaWZ5Iiwic3RyaW5naWZ5Iiwic3RyaXBCb20iLCJfcmVhZEZpbGUiLCJmaWxlIiwib3B0aW9ucyIsImVuY29kaW5nIiwiZnMiLCJzaG91bGRUaHJvdyIsInRocm93cyIsImRhdGEiLCJmcm9tQ2FsbGJhY2siLCJyZWFkRmlsZSIsIm9iaiIsIkpTT04iLCJwYXJzZSIsInJldml2ZXIiLCJlcnIiLCJtZXNzYWdlIiwiZnJvbVByb21pc2UiLCJyZWFkRmlsZVN5bmMiLCJjb250ZW50IiwiX3dyaXRlRmlsZSIsInN0ciIsIndyaXRlRmlsZSIsIndyaXRlRmlsZVN5bmMiLCJqc29uZmlsZSIsIm1vZHVsZSIsImV4cG9ydHMiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/jsonfile/index.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/jsonfile/utils.js":
/*!****************************************!*\
  !*** ./node_modules/jsonfile/utils.js ***!
  \****************************************/
/***/ ((module) => {

eval("\nfunction stringify(obj, { EOL = \"\\n\", finalEOL = true, replacer = null, spaces } = {}) {\n    const EOF = finalEOL ? EOL : \"\";\n    const str = JSON.stringify(obj, replacer, spaces);\n    return str.replace(/\\n/g, EOL) + EOF;\n}\nfunction stripBom(content) {\n    // we do this because JSON.parse would convert it to a utf8 string if encoding wasn't specified\n    if (Buffer.isBuffer(content)) content = content.toString(\"utf8\");\n    return content.replace(/^\\uFEFF/, \"\");\n}\nmodule.exports = {\n    stringify,\n    stripBom\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvanNvbmZpbGUvdXRpbHMuanMiLCJtYXBwaW5ncyI6IjtBQUFBLFNBQVNBLFVBQVdDLEdBQUcsRUFBRSxFQUFFQyxNQUFNLElBQUksRUFBRUMsV0FBVyxJQUFJLEVBQUVDLFdBQVcsSUFBSSxFQUFFQyxNQUFNLEVBQUUsR0FBRyxDQUFDLENBQUM7SUFDcEYsTUFBTUMsTUFBTUgsV0FBV0QsTUFBTTtJQUM3QixNQUFNSyxNQUFNQyxLQUFLUixTQUFTLENBQUNDLEtBQUtHLFVBQVVDO0lBRTFDLE9BQU9FLElBQUlFLE9BQU8sQ0FBQyxPQUFPUCxPQUFPSTtBQUNuQztBQUVBLFNBQVNJLFNBQVVDLE9BQU87SUFDeEIsK0ZBQStGO0lBQy9GLElBQUlDLE9BQU9DLFFBQVEsQ0FBQ0YsVUFBVUEsVUFBVUEsUUFBUUcsUUFBUSxDQUFDO0lBQ3pELE9BQU9ILFFBQVFGLE9BQU8sQ0FBQyxXQUFXO0FBQ3BDO0FBRUFNLE9BQU9DLE9BQU8sR0FBRztJQUFFaEI7SUFBV1U7QUFBUyIsInNvdXJjZXMiOlsid2VicGFjazovL2hzMTEvLi9ub2RlX21vZHVsZXMvanNvbmZpbGUvdXRpbHMuanM/ZjBjZSJdLCJzb3VyY2VzQ29udGVudCI6WyJmdW5jdGlvbiBzdHJpbmdpZnkgKG9iaiwgeyBFT0wgPSAnXFxuJywgZmluYWxFT0wgPSB0cnVlLCByZXBsYWNlciA9IG51bGwsIHNwYWNlcyB9ID0ge30pIHtcbiAgY29uc3QgRU9GID0gZmluYWxFT0wgPyBFT0wgOiAnJ1xuICBjb25zdCBzdHIgPSBKU09OLnN0cmluZ2lmeShvYmosIHJlcGxhY2VyLCBzcGFjZXMpXG5cbiAgcmV0dXJuIHN0ci5yZXBsYWNlKC9cXG4vZywgRU9MKSArIEVPRlxufVxuXG5mdW5jdGlvbiBzdHJpcEJvbSAoY29udGVudCkge1xuICAvLyB3ZSBkbyB0aGlzIGJlY2F1c2UgSlNPTi5wYXJzZSB3b3VsZCBjb252ZXJ0IGl0IHRvIGEgdXRmOCBzdHJpbmcgaWYgZW5jb2Rpbmcgd2Fzbid0IHNwZWNpZmllZFxuICBpZiAoQnVmZmVyLmlzQnVmZmVyKGNvbnRlbnQpKSBjb250ZW50ID0gY29udGVudC50b1N0cmluZygndXRmOCcpXG4gIHJldHVybiBjb250ZW50LnJlcGxhY2UoL15cXHVGRUZGLywgJycpXG59XG5cbm1vZHVsZS5leHBvcnRzID0geyBzdHJpbmdpZnksIHN0cmlwQm9tIH1cbiJdLCJuYW1lcyI6WyJzdHJpbmdpZnkiLCJvYmoiLCJFT0wiLCJmaW5hbEVPTCIsInJlcGxhY2VyIiwic3BhY2VzIiwiRU9GIiwic3RyIiwiSlNPTiIsInJlcGxhY2UiLCJzdHJpcEJvbSIsImNvbnRlbnQiLCJCdWZmZXIiLCJpc0J1ZmZlciIsInRvU3RyaW5nIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/jsonfile/utils.js\n");

/***/ })

};
;